//Сафошин А.С.


#include <iostream>
#include <fstream>
#include <string>
#include <cassert>
#include "Calculate.h"                                                          // Подключение заголовочного файла и библиотек

using namespace std;

using namespace vector_space;                                                         // Использование созданного модуля в пространстве имён для работы с векторами 

int main() {
    setlocale(LC_ALL, "RU");                                                    // Устанавливаем локаль для поддержки русского языка 
    srand(time(0));                                                             // Инициализация генератора случайных чисел
    string namef;                                                               // Переменная для хранения имени файла
    char user;                                                                  // Переменная для хранения выбора пользователя
    char askf;                                                                  // Переменная для хранения выбора файла 
    size_t n = 0;                                                               // Переменная для хранения количества элементов вектора
    test();                                                                     // Вызов функции тестирования

    cout << "Создать новый вектор? y/n: ";                                  // Запрос у пользователя на создание нового вектора
    cin >> user;                                                            // Чтение ввода пользователя
    if ((user == 'y') or (user == 'Y')) {                                   // Если пользователь выбрал 'y' или 'Y'
        cout << "Введите кол-во элементо вектора: ";                        // Запрос на ввод количества элементов
        cin >> n;                                                           // Чтение количества элементов
        while (n <= 0) {                                                    // Проверка на корректность ввода
            cout << "Кол-во элементов вектора должно быть больше нуля, повторите ввод: ";
            cin >> n;                                                       // Повторный ввод
        }
        vector_space <float> vect(n);                                             // Выделяем память для вектора
        cout << "Заполнить вектор вручную? y/n: ";                          // Запрос на выбор способа заполнения вектора
        cin >> user;                                                        // Чтение ввода пользователя
        cout << "Введите имя файла для записи в него вектора: ";            // Запрос на ввод имени файла
        cin >> namef;                                                       // Чтение имени файла
        cout << "В какой файл сохранить вектор: текстовый(t) или бинарный(b): "; // Запрос на ввод имени файла
        cin >> askf;                                                        // Чтение имени файла
        if (((user == 'y') or (user == 'Y')) and (askf == 't')) {          // Если пользователь выбрал ручное заполнение
            receive_data(vect);                                           // Функция для получения данных от пользователя
            input_txt_file(vect, namef);                                  // Запись вектора в файл
        }
        else if (((user == 'y') or (user == 'Y')) and (askf == 'b')) {
            receive_data(vect);                                           // Функция для получения данных от пользователя
            input_bin_file(vect, namef);                                  // Запись вектора в файл
        }
        else if (((user == 'n') or (user == 'N')) and (askf == 't')) {      // Если пользователь выбрал автоматическое заполнение
            rand_mas(vect);                                               // Генерация случайных чисел для вектора
            input_txt_file(vect, namef);                                  // Запись вектора в файл
        }
        else if (((user == 'n') or (user == 'N')) and (askf == 'b')) {      // Если пользователь выбрал автоматическое заполнение
            rand_mas(vect);                                               // Генерация случайных чисел для вектора
            input_bin_file(vect, namef);                                  // Запись вектора в файл
        }
        else {                                                              // Если введен неверный символ
            throw invalid_argument("Неверный ввод. Повторите попытку.");    // Генерация исключения
        }
        output_terminal(vect);                                            // Выводим данные в консоль
    }
    else if ((user == 'n') or (user == 'N')) {                              // Если пользователь выбрал загрузку вектора из файла
        cout << "Введите имя файла, из которого заполнить вектор: ";        // Запрос на ввод имени файла
        cin >> namef;                                                       // Чтение имени файла
        cout << "Из какого файла заполнить вектор: текстового(t) или бинарного(b): ";// Запрос на ввод данных
        cin >> askf;                                                        // Чтение ввода пользователя
        if ((askf == 't') or (askf == 'T')) {                               // Если пользователь выбрал текстовый файл
            n = vectay_size_from_file(namef);                                // Получение размера вектора из текстового файла
            vector_space <float> vect(n);                                         // Выделяем память для вектора
            output_txt_file(vect, namef);                                 // Чтение данных из текстового файла в вектор
            output_terminal(vect);                                        // Выводим данные в консоль
            cout << "Сумма элементов вектора по модулю: " << calculate(v); // Вычисление и вывод суммы по модулю
        }
        else if ((askf == 'b') or (askf == 'B')) {                          // Если пользователь выбрал бинарный файл
            n = get_vectay_size(namef);                                      // Получение размера вектора из бинарного файла файла
            vector_space <float> vect(n);                                         // Выделяем память для вектора
            output_bin_file(vect, namef);                                 // Чтение данных из бинарного файла в вектор
            output_terminal(vect);                                        // Выводим данные в консоль
            cout << "Сумма элементов вектора по модулю: " << calculate(v, n); // Вычисление и вывод суммы по модулю
        }
    }
    else {                                                                  // Если введен неверный символ
        cout << "Неверный ввод. Повторите попытку.";        
    }

    return 0;
}


